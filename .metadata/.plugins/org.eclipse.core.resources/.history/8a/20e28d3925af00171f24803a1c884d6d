package com.taotao.sso.service.impl;

import java.util.Date;
import java.util.List;
import java.util.UUID;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.util.DigestUtils;

import com.taotao.common.pojo.TaotaoResult;
import com.taotao.common.utils.JsonUtils;
import com.taotao.jedis.JedisClient;
import com.taotao.mapper.TbUserMapper;
import com.taotao.pojo.TbUser;
import com.taotao.pojo.TbUserExample;
import com.taotao.pojo.TbUserExample.Criteria;
import com.taotao.sso.service.UserService;


@Service
public class UserServiceImpl implements UserService {
	
	@Autowired
	private TbUserMapper tbUserMapper;
	@Autowired
	private JedisClient jedisClient;
	@Value("${USER_INFO}")
	private String USER_INFO;
	@Value("${SESSION_EXPIRE}")
	private String SESSION_EXPIRE;

	@Override
	public TaotaoResult checkData(String Data, int type) {

		TbUserExample example=new TbUserExample();
		Criteria criteria = example.createCriteria();
		//1代表姓名查询
		if(type == 1){
			criteria.andUsernameEqualTo(Data);
		//2代表电话查询
		}else if(type == 2){
			criteria.andPhoneEqualTo(Data);
		//3代表邮箱查询
		}else if(type == 3){
			criteria.andEmailEqualTo(Data);
		}else{
			return TaotaoResult.build(400, "数据中有非法的参数");
		}
		
		List<TbUser> list = tbUserMapper.selectByExample(example);
		//判断返回的查询结果是否为空，如果不为空说明数据库中存在这样的用户信息，应当返回false
		if(list!=null&&list.size()>0){
			return TaotaoResult.ok(false);
		}
		
		return TaotaoResult.ok(true);
	}

	@Override
	public TaotaoResult register(TbUser user) {

		//检验各项数据
		if(StringUtils.isBlank(user.getUsername())){
			return TaotaoResult.build(400, "用户名不能为空");
		}
		TaotaoResult result = checkData(user.getUsername(), 1);
		if(!(boolean) result.getData()){
			return TaotaoResult.build(400, "用户名重复");
		}
		if(StringUtils.isBlank(user.getPassword())){
			return TaotaoResult.build(400, "密码不能为空");
		}
		if(StringUtils.isNotBlank(user.getPhone())){
			result = checkData(user.getPhone(), 2);
			if(!(boolean) result.getData()){
				return TaotaoResult.build(400, "手机号重复");
			}
		}
		if(StringUtils.isNotBlank(user.getEmail())){
			result = checkData(user.getEmail(), 3);
			if(!(boolean) result.getData()){
				return TaotaoResult.build(400, "email重复");
			}
		}
		//补全属性
		user.setCreated(new Date());
		user.setUpdated(new Date());
		//密码进行MD5加密
		String md5DigestAsHex = DigestUtils.md5DigestAsHex(user.getPassword().getBytes());
		user.setPassword(md5DigestAsHex);
		//将用户信息传入到数据库
		tbUserMapper.insert(user);
		
		
		
		return TaotaoResult.ok();
	}

	@Override
	public TaotaoResult login(String username, String password) {

		TbUserExample example=new TbUserExample();
		Criteria criteria = example.createCriteria();
		criteria.andUsernameEqualTo(username);
		List<TbUser> list = tbUserMapper.selectByExample(example);
		if(list==null||list.size()==0){
			return TaotaoResult.build(400, "用户名错误");
		}
		TbUser user = list.get(0);
		if(!user.getPassword().equals(DigestUtils.md5DigestAsHex(password.getBytes()))){
			return TaotaoResult.build(400, "用户名错误");
		}
		String token=UUID.randomUUID().toString();
		user.setPassword(null);
		jedisClient.set(USER_INFO+":"+token, JsonUtils.objectToJson(user));
		jedisClient.expire(USER_INFO+":"+token, SESSION_EXPIRE);
		
		return null;
	}

}
