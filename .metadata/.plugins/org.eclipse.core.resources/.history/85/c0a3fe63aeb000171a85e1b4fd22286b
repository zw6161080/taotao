package com.taotao.cart.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.taotao.common.pojo.TaotaoResult;
import com.taotao.common.utils.CookieUtils;
import com.taotao.common.utils.JsonUtils;
import com.taotao.pojo.TbItem;
import com.taotao.service.ItemService;

@Controller
public class CartController {
	
	@Value("${CART_KEY}")
	private String CART_KEY;
	@Value("${CART_EXPIRE}")
	private Integer CART_EXPIRE;
	@Autowired
	private ItemService itemService;
	
	@RequestMapping("/cart/add/{itemId}")
	public String addItemCart(@PathVariable Long itemId,
			@RequestParam(defaultValue="1")Integer num,
			HttpServletRequest request,HttpServletResponse response){
		//从cookie中查询商品列表
		List<TbItem> cartItemList = getCartList(request);
		//判断要添加的商品在商品列表中是否存在,遍历商品列表
		boolean flag=false;
		for (TbItem tbItem : cartItemList) {
			//如果存在，商品数量增加
			//对象比较的是地址，应该是值的比较
			if(tbItem.getId()==itemId.longValue()){
				tbItem.setNum(tbItem.getNum()+num);
				flag=true;
				break;
			}
			
		}
		//如果商品不存在，根据商品id查询商品信息
		if(!flag){
			TbItem tbItem = itemService.getItemById(itemId);
			//从商品图片中取一张图片
			String images = tbItem.getImage();
			if(StringUtils.isNotBlank(images)){
				String[] imageList = images.split(",");
				tbItem.setImage(imageList[0]);
			}
			//设置购买商品的数量
			tbItem.setNum(num);
			//将商品添加到购物车
			cartItemList.add(tbItem);
		}
		//将商品添加到cookie
		CookieUtils.setCookie(request, response, CART_KEY, JsonUtils.objectToJson(cartItemList), CART_EXPIRE, true);
		return "cartSuccess";
		
				
		
		
	}
	
	private List<TbItem> getCartList(HttpServletRequest request){
		//从cookie中取商品列表
		String json = CookieUtils.getCookieValue(request, CART_KEY, true);
		//判断从cookie中得到的商品列表是否为空，即cookie是否有商品
		if(StringUtils.isBlank(json)){
			return new ArrayList<>();
		}
		//如果有商品就将得到的json返回成商品列表返回
		List<TbItem> list = JsonUtils.jsonToList(CART_KEY, TbItem.class);
		return list;
	}
	
	@RequestMapping("/cart/cart")
	public String showCartList(HttpServletRequest request){
		List<TbItem> cartList = getCartList(request);
		request.setAttribute("cartList", cartList);
		return "cart";
	}
	
	@RequestMapping("/cart/update/num/{itemId}/{num}")
	@ResponseBody
	public TaotaoResult updateItemNum(@PathVariable Long itemId,
			@PathVariable Integer num,
			HttpServletRequest request,HttpServletResponse response){
		//从cookie中取商品列表
		List<TbItem> cartList = getCartList(request);
		//遍历取出的商品列表，查询到对应的商品
		for (TbItem tbItem : cartList) {
			if(tbItem.getId()==itemId.longValue()){
				//更新商品数量
				tbItem.setNum(num);
				break;
			}
			
		}
		//将购物车列表写入cookie
		CookieUtils.setCookie(request, response, CART_KEY, JsonUtils.objectToJson(cartList), CART_EXPIRE, true);
		return TaotaoResult.ok();
	}
	
	@RequestMapping("/cart/delete/{itemId}")

}
