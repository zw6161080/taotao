package com.taotao.sso.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.taotao.common.pojo.TaotaoResult;
import com.taotao.common.utils.CookieUtils;
import com.taotao.common.utils.JsonUtils;
import com.taotao.pojo.TbUser;
import com.taotao.sso.service.UserService;

@Controller
public class UserController {
	
	@Autowired
	private UserService userService;
	@Value("${TOKEN_KEY}")
	private String TOKEN_KEY;
	
	@RequestMapping("/user/check/{param}/{type}")
	@ResponseBody
	public TaotaoResult checkData(@PathVariable String param,@PathVariable Integer type){
		TaotaoResult taotaoResult = userService.checkData(param, type);
		return taotaoResult;
	}
	
	@RequestMapping(value="/user/register",method=RequestMethod.POST)
	@ResponseBody
	public TaotaoResult register(TbUser user){
		TaotaoResult taotaoResult = userService.register(user);
		return taotaoResult;
	}
	
	@RequestMapping(value="/user/login",method=RequestMethod.POST)
	@ResponseBody
	public TaotaoResult login(String username,String password,HttpServletRequest request,HttpServletResponse response){
		TaotaoResult taotaoResult = userService.login(username, password);
		//先判断是否登陆成功
		if(taotaoResult.getStatus()==200){
			//将token写入cookie，cookie要跨域
			CookieUtils.setCookie(request, response, TOKEN_KEY, taotaoResult.getData().toString());
			
		}
		return taotaoResult;
	}
	
	@RequestMapping(value="/user/token/{token}",method=RequestMethod.GET,
			//指定反会相应数据的content-type
			produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public String getUserByToken(@PathVariable String token,String callback){
		TaotaoResult taotaoResult = userService.getUserByToken(token);
		//判断是否为jsonp请求,以便于用于js跨域
		if(StringUtils.isNotBlank(callback)){
			return callback+"("+JsonUtils.objectToJson(taotaoResult)+");";
		}
		return JsonUtils.objectToJson(taotaoResult);
	}
	
	@RequestMapping(value="/logout/{token}",method=RequestMethod.GET)
	@ResponseBody
	public TaotaoResult logout(@PathVariable String token){
		TaotaoResult taotaoResult = userService.logout(token);
		return taotaoResult;
	}
	

}
